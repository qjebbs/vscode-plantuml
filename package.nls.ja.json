{
	"plantuml.exportCurrent.title": "カーソル位置のダイアグラムをエクスポート",
	"plantuml.exportDocument.title": "ファイル内のダイアグラムをエクスポート",
	"plantuml.exportWorkspace.title": "ワークスペース内のダイアグラムをエクスポート",
	"plantuml.preview.title": "カーソル位置のダイアグラムをプレビュー",
	"plantuml.URLCurrent.title": "カーソル位置のダイアグラムをURLに変換",
	"plantuml.URLDocument.title": "ファイル内のダイアグラムをURLに変換",
	"plantuml.extractSource.title": "画像からPlantUMLダイアグラムのソースを抽出",
	"plantuml.configuration.configTitle": "PlantUML設定",
	"plantuml.configuration.exportFormat": "エクスポートのフォーマット指定。空白の場合はエクスポート実行ごとにフォーマットを選択します",
	"plantuml.configuration.jar": "代替の plantuml.jar の位置を指定。 空白の場合は組み込みのjarファイルを使用します",
	"plantuml.configuration.diagramsRoot": "すべてのダイアグラムファイルの位置を指定。(ワークスペース内のディレクトリへの相対パス)。",
	"plantuml.configuration.fileExtensions": "エクスポートする拡張子を指定。 特にワークスペースでの出力で、\".java\" のようなソースコードでもダイアグラムをエクスポートしたい場合に独自の拡張子を設定することができます",
	"plantuml.configuration.exportSubFolder": "ダイアグラムを出力元のファイルと同名のディレクトリにエクスポートします",
	"plantuml.configuration.exportIncludeFolderHeirarchy": "Include folder heiracrchy between the root and the source diagram in the exported file path.",
	"plantuml.configuration.exportConcurrency": "複数のダイアグラムをエクスポートする際の並列実行数の設定します",
	"plantuml.configuration.exportOutDir": "エクスポートされたワークスペースのダイアグラムは、このディレクトリに整理されます(ワークスペース内のディレクトリへの相対パス)。",
	"plantuml.configuration.previewAutoUpdate": "プレビューウィンドウを自動的に更新するかを指定します",
	"plantuml.configuration.previewSnapIndicators": "プレビューウィンドウにスナップインジケーターを表示するかどうかを決定します。",
	"plantuml.configuration.server": "その場でUMLダイアグラムを生成するPlantUMLサーバーを指定します。データを共有しても問題ないと思われる方は、公式サーバ https://www.plantuml.com/plantuml をご利用ください。",
	"plantuml.configuration.urlFormat": "URL形式を指定。空白の場合はURLを生成するたびにフォーマットを選択します",
	"plantuml.configuration.urlResult": "URL出力結果形式を指定。 Simple URL または、MarkDown を使用できます",
	"plantuml.configuration.render": "ダイアグラムのエクスポートとプレビューの描画方法を選択します。\nLocal: 伝統的なローカルで描画する方法です。あなたはまずはじめに JAVA と GraphViz を設定する必要があります。\nPlantUMLServer: \"plantuml.server\" の設定で指定されたサーバーでダイアグラムを描画します。こちらのほうが高速ですが、別途サーバーが必要です。\nデフォルトでは Local が設定されます",
	"plantuml.configuration.commandArgs": "commandArgsを使用すると、Javaコマンドに引数を追加できます。 \n例：\"-DPLANTUML_LIMIT_SIZE=8192\".",
	"plantuml.configuration.jarArgs": "jarArgsでは、\"-config plantuml.config\"などの引数をplantuml.jarに追加できます。",
	"plantuml.configuration.exportMapFile": "エクスポート時にイメージマップ（.cmapx） ファイルをエクスポートするかどうかを決定します",
	"plantuml.configuration.java": "Java実行可能パス",
	"plantuml.configuration.includepaths": "ソースディレクトリと'diagramsRoot'以外のインクルードパスを指定します",
	"plantuml.configuration.lintDiagramNoName": "名なしのダイアグラムをlintします",
	"plantuml.untrusted.description": "脆弱性のあるワークスペースの設定の読み込みに必要"
}